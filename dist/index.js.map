{
  "version": 3,
  "sources": ["../node_modules/prismjs/prism.js", "../src/hooks/Code.ts", "../node_modules/prismjs/components/prism-elixir.min.js", "../src/hooks/utils.ts", "../src/hooks/ContentEditable.ts", "../src/hooks/History.ts", "../src/hooks/Selection.ts", "../src/hooks/BlockNavigation.ts"],
  "sourcesContent": ["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism\u2019s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading\u2026';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '\u2716 Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '\u2716 Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n", "/**\n * Heavily inspired by\n * https://css-tricks.com/creating-an-editable-textarea-that-supports-syntax-highlighted-code/\n *\n * The goal here was to do the bare minimum JS to get it to work, while relying\n * on the elixir update to manage the content.\n */\n\nimport Prism from 'prismjs';\n\nimport 'prismjs/components/prism-elixir.min.js';\n\nimport { ViewHook } from './types';\nimport { getTarget } from './utils';\n\nconst getHiglightEl = (el: HTMLElement): HTMLElement => {\n  const codeEl = el.querySelector<HTMLElement>('.philtre__code__highlighted');\n  if (!codeEl) {\n    throw 'Highlight container not found';\n  }\n  return codeEl;\n};\n\nconst setupHighlight = (el: HTMLElement) => {\n  const language = el.dataset.language;\n  if (!language) {\n    throw 'Language not specified ';\n  }\n\n  const highlightEl = getHiglightEl(el);\n  highlightEl.classList.add(`language-${language}`);\n  highlightEl.classList.add(`lang-${language}`);\n};\n\nconst getCodeEl = (el: HTMLElement): HTMLTextAreaElement => {\n  const codeEl = el.querySelector<HTMLTextAreaElement>(\n    '.philtre__code__editable'\n  );\n  if (!codeEl) {\n    throw 'Editable container not found';\n  }\n  return codeEl;\n};\n\nconst updateHighlight = (el: HTMLElement) => {\n  const highlightEl = getHiglightEl(el);\n  const codeEl = getCodeEl(el);\n\n  const newValue = codeEl.value.endsWith('\\n')\n    ? codeEl.value.concat('\\n')\n    : codeEl.value;\n\n  highlightEl.innerHTML = newValue;\n  Prism.highlightElement(highlightEl);\n};\n\nconst bindInput = (el: HTMLElement, hook: ViewHook): void => {\n  const codeEl = getCodeEl(el);\n\n  codeEl.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter' && e.shiftKey) {\n      e.preventDefault();\n      hook.pushEventTo(getTarget(el), 'add_block');\n    }\n  });\n\n  codeEl.addEventListener('input', () => {\n    updateHighlight(el);\n    hook.pushEventTo(getTarget(el), 'update', { value: codeEl.value });\n  });\n};\n\nexport const Code = {\n  mounted() {\n    setupHighlight(this.el);\n    bindInput(this.el, this);\n    updateHighlight(this.el);\n  },\n  updated() {\n    setupHighlight(this.el);\n  },\n} as ViewHook;\n", "Prism.languages.elixir={doc:{pattern:/@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,inside:{attribute:/^@\\w+/,string:/['\"][\\s\\S]+/}},comment:{pattern:/#.*/,greedy:!0},regex:{pattern:/~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,greedy:!0},string:[{pattern:/~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,greedy:!0,inside:{}},{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,greedy:!0,inside:{}},{pattern:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{}}],atom:{pattern:/(^|[^:]):\\w+/,lookbehind:!0,alias:\"symbol\"},module:{pattern:/\\b[A-Z]\\w*\\b/,alias:\"class-name\"},\"attr-name\":/\\b\\w+\\??:(?!:)/,argument:{pattern:/(^|[^&])&\\d+/,lookbehind:!0,alias:\"variable\"},attribute:{pattern:/@\\w+/,alias:\"variable\"},function:/\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,number:/\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,keyword:/\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,boolean:/\\b(?:false|nil|true)\\b/,operator:[/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,{pattern:/([^<])<(?!<)/,lookbehind:!0},{pattern:/([^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,%\\[\\]{}()]/},Prism.languages.elixir.string.forEach((function(e){e.inside={interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.elixir}}}}));", "export const getTarget = (el: HTMLElement): string => {\n  const target = el.getAttribute('phx-target');\n  if (!target) {\n    throw new Error('Target element does not have a \"phx-target\" attribute');\n  }\n  return target;\n};\n", "import { ViewHook } from './types';\nimport { getTarget } from './utils';\n\n/**\n * Resolves closest cell element to the specified node or dom element.\n * This could be the specified record itself, or a parent, or a child.\n */\nconst resolveCell = (node: Node | HTMLElement): HTMLElement | null => {\n  // the current node is the cell we are looking for\n  if ('dataset' in node && node.dataset.cellId) {\n    return node;\n  }\n\n  // the current node is the block container. if we got here, means we (probably)\n  // only have one cell to pick\n  if ('dataset' in node && 'block' in node.dataset) {\n    return node.querySelector('[data-cell-id]');\n  }\n\n  // the current node is a fragment child node of the cell\n  if (node.parentElement?.dataset.cellId) {\n    return node.parentElement;\n  }\n\n  return null;\n};\n\nconst getChildIndex = (node: Node): number =>\n  Array.prototype.indexOf.call(node.parentNode?.children || [], node);\n\nconst isAtStartOfBlock = (): boolean => {\n  const selection = document.getSelection();\n  if (!selection) {\n    return false;\n  }\n  const node = selection.anchorNode;\n  if (!node) {\n    return false;\n  }\n  const indexedNode = node.nodeType === Node.TEXT_NODE ? node.parentNode : node;\n  if (!indexedNode) {\n    return false;\n  }\n  return getChildIndex(indexedNode) === 0 && selection.anchorOffset == 0;\n};\n\nconst getSelection = () => {\n  const selection = document.getSelection();\n  if (!selection || !selection.anchorNode || !selection.focusNode) {\n    return;\n  }\n\n  const startElement = resolveCell(selection.anchorNode);\n  const endElement = resolveCell(selection.focusNode);\n\n  if (!startElement) {\n    return null;\n  }\n\n  if (!endElement) {\n    return null;\n  }\n\n  const startId = startElement.dataset.cellId;\n  const endId = endElement.dataset.cellId;\n\n  const [startOffset, endOffset] =\n    selection.anchorOffset < selection.focusOffset\n      ? [selection.anchorOffset, selection.focusOffset]\n      : [selection.focusOffset, selection.anchorOffset];\n\n  return {\n    start_id: startId,\n    start_offset: startOffset,\n    end_id: endId,\n    end_offset: endOffset,\n  };\n};\n\ntype Cell = {\n  id: string;\n  modifiers: ('strong' | 'italic' | 'br')[];\n  text: string;\n};\n\nconst getCells = (el: HTMLElement): Cell[] => {\n  const cells = el.querySelectorAll<HTMLSpanElement>('[data-cell-id]');\n\n  return Array.from(cells).map((child) => {\n    const modifiers: ('strong' | 'italic' | 'br')[] = [];\n\n    if (child.classList.contains('strong')) {\n      modifiers.push('strong');\n    }\n\n    if (child.classList.contains('italic')) {\n      modifiers.push('italic');\n    }\n\n    if (child.classList.contains('br')) {\n      modifiers.push('br');\n    }\n\n    return {\n      id: child.dataset.cellId || '',\n      text: child.innerText.replace('\u00A0', ' '),\n      modifiers,\n    };\n  });\n};\n\nconst resolveCommand = (e: KeyboardEvent) => {\n  if (e.key === 'Backspace') {\n    if (isAtStartOfBlock()) {\n      return 'backspace_from_start';\n    }\n  }\n\n  if (e.shiftKey && e.key === 'Enter' && !e.metaKey) {\n    return 'split_line';\n  }\n\n  if (e.key === 'Enter') {\n    return 'split_block';\n  }\n\n  if (e.metaKey && !e.shiftKey && !e.altKey && e.key === 'b') {\n    return 'toggle.bold';\n  }\n\n  if (e.metaKey && !e.shiftKey && !e.altKey && e.key === 'i') {\n    return 'toggle.italic';\n  }\n};\n\nconst restoreSelection = (el: HTMLElement): void => {\n  // if the block is the focused block, the backend will insert these data\n  // attributes onto the containing element\n  const {\n    selectionStartId,\n    selectionEndId,\n    selectionStartOffset,\n    selectionEndOffset,\n  } = el.dataset;\n\n  if (\n    !selectionStartId ||\n    !selectionEndId ||\n    !selectionStartOffset ||\n    !selectionEndOffset\n  ) {\n    return;\n  }\n\n  // we know the element needs to be focused, just not fully clear where yet\n  el.focus();\n\n  const selection = el.ownerDocument.getSelection();\n  if (!selection) {\n    return;\n  }\n  selection.removeAllRanges();\n\n  const range = document.createRange();\n\n  const focusStart = el.querySelector(`[data-cell-id=\"${selectionStartId}\"]`);\n  if (!focusStart) {\n    return;\n  }\n\n  const offsetStart = parseInt(selectionStartOffset);\n\n  if (!focusStart.childNodes[0]) {\n    focusStart.appendChild(document.createTextNode(''));\n  }\n  range.setStart(focusStart.childNodes[0], offsetStart);\n\n  const focusEnd = el.querySelector(`[data-cell-id=\"${selectionEndId}\"]`);\n  if (!focusEnd) {\n    return;\n  }\n  const offsetEnd = parseInt(selectionEndOffset);\n  range.setEnd(focusEnd.childNodes[0], offsetEnd);\n  selection.addRange(range);\n};\n\nexport const ContentEditable = {\n  mounted() {\n    const el: HTMLElement = this.el;\n\n    let saveRef: null | number = null;\n    let savePromise: Promise<void> | null = null;\n\n    el.addEventListener('input', () => {\n      if (saveRef) {\n        clearTimeout(saveRef);\n      }\n\n      const eventName = 'update';\n      const target = getTarget(this.el);\n\n      savePromise = new Promise((resolve) => {\n        const cells = getCells(el);\n        const selection = getSelection();\n        const params = { selection, cells };\n\n        saveRef = window.setTimeout(async () => {\n          this.pushEventTo(target, eventName, params, () => {\n            saveRef = null;\n            savePromise = null;\n            resolve();\n          });\n        }, 300);\n      });\n    });\n\n    el.addEventListener('keydown', async (event: KeyboardEvent) => {\n      const command = resolveCommand(event);\n\n      if (!command) {\n        return;\n      }\n\n      event.preventDefault();\n\n      const selection = getSelection();\n\n      if (savePromise && command) {\n        await savePromise;\n      }\n\n      this.pushEventTo(getTarget(el), command, { selection });\n    });\n\n    el.addEventListener('paste', (event: ClipboardEvent) => {\n      event.preventDefault();\n      const target = getTarget(el);\n      this.pushEventTo(target, 'paste_blocks', { selection: getSelection() });\n    });\n\n    restoreSelection(el);\n  },\n\n  updated() {\n    restoreSelection(this.el);\n  },\n} as ViewHook;\n", "import { ViewHook } from './types';\nimport { getTarget } from './utils';\n\nexport const History = {\n  mounted() {\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'z' && e.metaKey && e.shiftKey) {\n        this.pushEventTo(getTarget(this.el), 'redo');\n        e.preventDefault();\n        return;\n      }\n\n      if (e.key === 'z' && e.metaKey) {\n        this.pushEventTo(getTarget(this.el), 'undo');\n        e.preventDefault();\n        return;\n      }\n\n      if (e.key === 'y' && e.metaKey) {\n        this.pushEventTo(getTarget(this.el), 'redo');\n        e.preventDefault();\n      }\n    });\n  },\n} as ViewHook;\n", "import { ViewHook } from './types';\nimport { getTarget } from './utils';\n\nconst overlaps = (a: HTMLElement, b: HTMLElement): boolean => {\n  const aRect = a.getBoundingClientRect();\n  const bRect = b.getBoundingClientRect();\n\n  return !(\n    aRect.top > bRect.bottom ||\n    aRect.right < bRect.left ||\n    aRect.bottom < bRect.top ||\n    aRect.left > bRect.right\n  );\n};\n\nconst initCopy = (hook: ViewHook) => {\n  document.addEventListener('copy', (event: ClipboardEvent) => {\n    const selected = document.querySelectorAll<HTMLElement>(\n      '.philtre__editor [data-selected]'\n    );\n\n    if (selected.length === 0) {\n      return;\n    }\n\n    event.preventDefault();\n\n    hook.pushEventTo(getTarget(hook.el), 'copy_blocks', {\n      block_ids: Array.from(selected).map((el) => el.id),\n    });\n  });\n};\n\ntype SelectionState = {\n  fromX: number;\n  fromY: number;\n  toX: number;\n  toY: number;\n  selecting: boolean;\n};\n\nconst getWidth = (state: SelectionState): number =>\n  Math.abs(state.toX - state.fromX);\n\nconst getHeight = (state: SelectionState): number =>\n  Math.abs(state.toY - state.fromY);\n\nconst getLeft = (state: SelectionState): number =>\n  Math.min(state.fromX, state.toX);\n\nconst getTop = (state: SelectionState): number =>\n  Math.min(state.fromY, state.toY);\n\nconst showDOM = (selection: HTMLElement): void => {\n  selection.style.display = 'none';\n  selection.style.background = 'rgba(0,0,255,0.1)';\n  selection.style.position = 'fixed';\n  selection.style.display = 'block';\n};\n\nconst updateDOM = (selection: HTMLElement, state: SelectionState): void => {\n  selection.style.left = `${getLeft(state)}px`;\n  selection.style.top = `${getTop(state)}px`;\n  selection.style.width = `${getWidth(state)}px`;\n  selection.style.height = `${getHeight(state)}px`;\n};\n\nconst resetDOM = (selection: HTMLElement, state: SelectionState) => {\n  selection.style.left = `${getLeft(state)}px`;\n  selection.style.top = `${getTop(state)}px`;\n  selection.style.width = `0px`;\n  selection.style.height = `0px`;\n};\n\nconst hideDOM = (selection: HTMLElement): void => {\n  selection.style.display = 'none';\n};\n\nconst THRESHOLD = 20;\nconst pastThreshold = (state: SelectionState): boolean =>\n  Math.abs(state.fromX - state.toX) > THRESHOLD &&\n  Math.abs(state.fromY - state.toY) > THRESHOLD;\n\nexport const Selection = {\n  mounted() {\n    initCopy(this);\n\n    const selection: HTMLElement = this.el;\n\n    const selectionState: SelectionState = {\n      fromX: 0,\n      fromY: 0,\n      toX: 0,\n      toY: 0,\n      selecting: false,\n    };\n\n    document.addEventListener('mousedown', (event: MouseEvent) => {\n      if (event.button !== 0) {\n        return;\n      }\n\n      selectionState.selecting = true;\n      selectionState.fromX = event.x;\n      selectionState.fromY = event.y;\n\n      showDOM(selection);\n    });\n\n    document.addEventListener('mousemove', (event) => {\n      if (!selectionState.selecting) {\n        return;\n      }\n\n      selectionState.toX = event.x;\n      selectionState.toY = event.y;\n\n      updateDOM(selection, selectionState);\n    });\n\n    document.addEventListener('mouseup', (event) => {\n      if (!selectionState.selecting) {\n        return;\n      }\n\n      selectionState.toX = event.x;\n      selectionState.toY = event.y;\n      selectionState.selecting = false;\n\n      if (!pastThreshold(selectionState)) {\n        return;\n      }\n\n      const allBlocks = document.querySelectorAll<HTMLElement>('[data-block]');\n\n      const results = Array.from(allBlocks).filter((block) =>\n        overlaps(block, selection)\n      );\n\n      const payload = {\n        block_ids: results.map((el) => el.id),\n      };\n\n      resetDOM(selection, selectionState);\n      hideDOM(selection);\n\n      this.pushEventTo(getTarget(this.el), 'select_blocks', payload);\n    });\n  },\n} as ViewHook;\n", "import { ViewHook } from './types';\nimport { getTarget } from './utils';\n\nconst getFocusable = (el: HTMLElement) => {\n  const focusable = el.querySelector<HTMLElement>('[data-block]');\n  if (!focusable) {\n    throw new Error('Section does not contain a block');\n  }\n  return focusable;\n};\n\nconst maybeFocusBlock = (el: HTMLElement) => {\n  if (!('focused' in el.dataset)) {\n    return;\n  }\n\n  //no need to focus if the block already has focus\n  const focusable = getFocusable(el);\n  if (focusable.id === document.activeElement?.id) {\n    return;\n  }\n\n  focusable.focus();\n};\n\n/**\n * Handles block navigation by binding to key events and dispatching navigation\n * events to the backend\n */\nexport const BlockNavigation = {\n  mounted() {\n    const el = this.el;\n    const target = getTarget(this.el);\n\n    const focusCurrent = () =>\n      this.pushEventTo(getTarget(el), 'focus_current', {\n        block_id: getFocusable(el).id,\n      });\n\n    const focusPrevious = () => this.pushEventTo(target, 'focus_previous');\n    const focusNext = () => this.pushEventTo(target, 'focus_next');\n\n    // on tab and shift + tab, we focus next and previous section/block respectively\n    el.addEventListener('keydown', (e) => {\n      if (e.key !== 'Tab') {\n        return;\n      }\n\n      if (e.metaKey) {\n        return;\n      }\n\n      e.preventDefault();\n      e.shiftKey ? focusPrevious() : focusNext();\n    });\n\n    // when the block itself gains focus via user interaction or backend change\n    // we need to mark the section as focused\n    getFocusable(el).addEventListener('focus', () => {\n      if ('focused' in el.dataset) {\n        return;\n      }\n\n      focusCurrent();\n    });\n\n    // This hook is bound to a section container\n    // the actual inner block might get removed or modified in some wayh, where\n    // the focus event listener will get detached.\n    // To track that scenario, we observe dom changes on the children of this block and\n    // refocus when applicable.\n    // This is not a very clean solution. It should be possible to instead restructure the\n    // backend code to track this a bit better.\n    const observer = new MutationObserver((mutations) => {\n      const addedElements = Array.from(mutations)\n        .map((m) => Array.from(m.addedNodes))\n        .flat() as unknown as HTMLElement[];\n\n      const addedBlock = addedElements.find(\n        (n) => 'dataset' in n && 'block' in n.dataset\n      );\n\n      if (!addedBlock) {\n        return;\n      }\n\n      if ('focused' in el.dataset) {\n        return;\n      }\n\n      if (document.activeElement?.id !== addedBlock.id) {\n        return;\n      }\n\n      focusCurrent();\n    });\n\n    observer.observe(el, {\n      subtree: false,\n      childList: true,\n    });\n\n    maybeFocusBlock(this.el);\n  },\n  updated() {\n    maybeFocusBlock(this.el);\n  },\n} as ViewHook;\n"],
  "mappings": "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",
  "names": []
}
